name: meson-build
on: [push, pull_request]
jobs:
  build:
    runs-on: ${{ matrix.runs-on }}
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false # don't abort if one of the build failse
      matrix:
        include:
          - name: Linux
            runs-on: ubuntu-latest
          - name: macOS
            runs-on: macos-latest

    env:
      SRC_PATH: ${{ github.workspace }}/src
      BUILD_PATH: ${{ github.workspace }}/builddir
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v2
      - name: install dependencies for Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install --yes libjack-jackd2-dev libglibmm-2.4-dev liblo-dev libsystemd-dev librtmidi-dev
          python -m pip install --upgrade pip
          pip install meson ninja
      - name: install dependencies for macOS
        if: runner.os == 'macOS'
        env:
          HOMEBREW_NO_ANALYTICS: 1
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
        run: |
          brew install jack meson libxml++3 liblo rtmidi osxutils ninja
      - name: build on Linux
        if: runner.os == 'Linux'
        run: |
          meson --buildtype release $BUILD_PATH
          cd $BUILD_PATH
          meson compile
      - name: build on Linux / macOS
        if: runner.os == 'macOS'
        env:
          DEVELOPER_DIR: "/Applications/Xcode_11.7.app/Contents/Developer" # specify XCode version on macOS
          # CC: apple-clang
        run: |
          meson --buildtype release $BUILD_PATH
          cd $BUILD_PATH
          meson compile
